syntax = "proto3";

package ibc.lightclients.tendermint.v1;

option go_package = "github.com/cosmos/ibc-go/v3/modules/light-clients/07-tendermint/types";

import "tendermint/types/validator.proto";
import "tendermint/types/types.proto";
import "proofs.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "ibc/core/client/v1/client.proto";
import "ibc/core/commitment/v1/commitment.proto";
import "gogoproto/gogo.proto";

// Beefy Authority Info
messsage BeefyAuthority {
    // Id of the authority set, it should be strictly increasing
    uint64 id = 1;
    // size  of the authority set
    uint64 len = 2;
    // merkle root of all authority public keys.
    H256 authorityMerkleRRoot = 3;
}

// ClientState from Tendermint tracks the current validator set, latest height,
// and a possible frozen height.
message ClientState {
  option (gogoproto.goproto_getters) = false;

  string   chain_id    = 1;
  Fraction trust_level = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"trust_level\""];
  // Latest mmr root  hash
  H256 mmr_root_hash = 3;
  // block number for the latest mmr_root_hash
  uint64 latestBeefyHeight = 4;
  // authorities for the current round
  BeefyAuthority authority = 5;
}

// data needed to prove finality about ibc commitments in parachain
message ParachainHeaderProof {
  option (gogoproto.goproto_getters) = false;

    // leaf index, latest_beefy_block - beefy_activation_block
    uint64 leaf_index = 1;
    // mmr proofs for this index, gotten from rpc "mmr_generateProofs"
    // TODO: H256
    H256[] proofs = 2;
    // proofs for our header in the parachain heads root
    H256[] heads_proof = 4;
    // reconstructed MmrLeaf, see beefy-go spec
    MmrLeafPartial mmr_leaf = 5; 
  }
  
  // data needed to update the client
  message UpdateClientProof {
  option (gogoproto.goproto_getters) = false;

    // new mmr_root_hash
    H256 mmr_root_hash = 1;
    // gotten from rpc subscription
    [][65]byte signatures = 2;
    // generate using full authority list from runtime
    H256[] authority_proof = 3;
  }

// ConsensusState defines the consensus state from Tendermint.
message ConsensusState {
  option (gogoproto.goproto_getters) = false;

  // timestamp that corresponds to the block height in which the ConsensusState
  // was stored.
  google.protobuf.Timestamp timestamp = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  // commitment root (i.e app hash)
  ibc.core.commitment.v1.MerkleRoot root                 = 2 [(gogoproto.nullable) = false];
  bytes                             next_validators_hash = 3 [
    (gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes",
    (gogoproto.moretags) = "yaml:\"next_validators_hash\""
  ];
}

// Misbehaviour is a wrapper over two conflicting Headers
// that implements Misbehaviour interface expected by ICS-02
message Misbehaviour {
  option (gogoproto.goproto_getters) = false;

  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  Header header_1  = 2 [(gogoproto.customname) = "Header1", (gogoproto.moretags) = "yaml:\"header_1\""];
  Header header_2  = 3 [(gogoproto.customname) = "Header2", (gogoproto.moretags) = "yaml:\"header_2\""];
}

// Header defines the Tendermint client consensus Header.
// It encapsulates all the information necessary to update from a trusted
// Tendermint ConsensusState. The inclusion of TrustedHeight and
// TrustedValidators allows this update to process correctly, so long as the
// ConsensusState for the TrustedHeight exists, this removes race conditions
// among relayers The SignedHeader and ValidatorSet are the new untrusted update
// fields for the client. The TrustedHeight is the height of a stored
// ConsensusState on the client that will be used to verify the new untrusted
// header. The Trusted ConsensusState must be within the unbonding period of
// current time in order to correctly verify, and the TrustedValidators must
// hash to TrustedConsensusState.NextValidatorsHash since that is the last
// trusted validator set at the TrustedHeight.
message Header {
  Header parachain_header = 1
      [(gogoproto.embed) = true, (gogoproto.moretags) = "yaml:\"signed_header\""];
    // Parachain header proofs
    ParachainHeaderProof parachain_header_proof = 2;
   UpdateClientProof update_client_proof = 3; 
}

// Fraction defines the protobuf message type for tmmath.Fraction that only
// supports positive values.
message Fraction {
  uint64 numerator   = 1;
  uint64 denominator = 2;
}
