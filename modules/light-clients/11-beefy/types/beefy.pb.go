// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ibc/lightclients/beefy/v1/beefy.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ClientState from Beefy tracks the current validator set, latest height,
// and a possible frozen height.
type ClientState struct {
	// Latest mmr root hash
	MmrRootHash []byte `protobuf:"bytes,1,opt,name=mmr_root_hash,json=mmrRootHash,proto3" json:"mmr_root_hash,omitempty"`
	// block number for the latest mmr_root_hash
	LatestBeefyHeight uint32 `protobuf:"varint,2,opt,name=latest_beefy_height,json=latestBeefyHeight,proto3" json:"latest_beefy_height,omitempty"`
	// Block height when the client was frozen due to a misbehaviour
	FrozenHeight uint64 `protobuf:"varint,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	// block number that the beefy protocol was activated on the relay chain.
	// This should be the first block in the merkle-mountain-range tree.
	BeefyActivationBlock uint32 `protobuf:"varint,4,opt,name=beefy_activation_block,json=beefyActivationBlock,proto3" json:"beefy_activation_block,omitempty"`
	// authorities for the current round
	Authority *BeefyAuthoritySet `protobuf:"bytes,5,opt,name=authority,proto3" json:"authority,omitempty"`
	// authorities for the next round
	NextAuthoritySet *BeefyAuthoritySet `protobuf:"bytes,6,opt,name=next_authority_set,json=nextAuthoritySet,proto3" json:"next_authority_set,omitempty"`
}

func (m *ClientState) Reset()         { *m = ClientState{} }
func (m *ClientState) String() string { return proto.CompactTextString(m) }
func (*ClientState) ProtoMessage()    {}
func (*ClientState) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{0}
}
func (m *ClientState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientState.Unmarshal(m, b)
}
func (m *ClientState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientState.Marshal(b, m, deterministic)
}
func (m *ClientState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientState.Merge(m, src)
}
func (m *ClientState) XXX_Size() int {
	return xxx_messageInfo_ClientState.Size(m)
}
func (m *ClientState) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientState.DiscardUnknown(m)
}

var xxx_messageInfo_ClientState proto.InternalMessageInfo

// Actual payload items
type PayloadItem struct {
	// 2-byte payload id
	PayloadId *SizedByte2 `protobuf:"bytes,1,opt,name=payload_id,json=payloadId,proto3,customtype=SizedByte2" json:"payload_id,omitempty"`
	// arbitrary length payload data., eg mmr_root_hash
	PayloadData []byte `protobuf:"bytes,2,opt,name=payload_data,json=payloadData,proto3" json:"payload_data,omitempty"`
}

func (m *PayloadItem) Reset()         { *m = PayloadItem{} }
func (m *PayloadItem) String() string { return proto.CompactTextString(m) }
func (*PayloadItem) ProtoMessage()    {}
func (*PayloadItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{1}
}
func (m *PayloadItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayloadItem.Unmarshal(m, b)
}
func (m *PayloadItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayloadItem.Marshal(b, m, deterministic)
}
func (m *PayloadItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayloadItem.Merge(m, src)
}
func (m *PayloadItem) XXX_Size() int {
	return xxx_messageInfo_PayloadItem.Size(m)
}
func (m *PayloadItem) XXX_DiscardUnknown() {
	xxx_messageInfo_PayloadItem.DiscardUnknown(m)
}

var xxx_messageInfo_PayloadItem proto.InternalMessageInfo

// Commitment message signed by beefy validators
type Commitment struct {
	// array of payload items signed by Beefy validators
	Payload []*PayloadItem `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	// block number for this commitment
	BlockNumer uint32 `protobuf:"varint,2,opt,name=block_numer,json=blockNumer,proto3" json:"block_numer,omitempty"`
	// validator set that signed this commitment
	ValidatorSetId uint64 `protobuf:"varint,3,opt,name=validator_set_id,json=validatorSetId,proto3" json:"validator_set_id,omitempty"`
}

func (m *Commitment) Reset()         { *m = Commitment{} }
func (m *Commitment) String() string { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()    {}
func (*Commitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{2}
}
func (m *Commitment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commitment.Unmarshal(m, b)
}
func (m *Commitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commitment.Marshal(b, m, deterministic)
}
func (m *Commitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commitment.Merge(m, src)
}
func (m *Commitment) XXX_Size() int {
	return xxx_messageInfo_Commitment.Size(m)
}
func (m *Commitment) XXX_DiscardUnknown() {
	xxx_messageInfo_Commitment.DiscardUnknown(m)
}

var xxx_messageInfo_Commitment proto.InternalMessageInfo

// Signature belonging to a single validator
type CommitmentSignature struct {
	// actual signature bytes
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// authority leaf index in the merkle tree.
	AuthorityIndex uint64 `protobuf:"varint,2,opt,name=authority_index,json=authorityIndex,proto3" json:"authority_index,omitempty"`
}

func (m *CommitmentSignature) Reset()         { *m = CommitmentSignature{} }
func (m *CommitmentSignature) String() string { return proto.CompactTextString(m) }
func (*CommitmentSignature) ProtoMessage()    {}
func (*CommitmentSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{3}
}
func (m *CommitmentSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitmentSignature.Unmarshal(m, b)
}
func (m *CommitmentSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitmentSignature.Marshal(b, m, deterministic)
}
func (m *CommitmentSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitmentSignature.Merge(m, src)
}
func (m *CommitmentSignature) XXX_Size() int {
	return xxx_messageInfo_CommitmentSignature.Size(m)
}
func (m *CommitmentSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitmentSignature.DiscardUnknown(m)
}

var xxx_messageInfo_CommitmentSignature proto.InternalMessageInfo

// signed commitment data
type SignedCommitment struct {
	// commitment data being signed
	Commitment *Commitment `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	// gotten from rpc subscription
	Signatures []*CommitmentSignature `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (m *SignedCommitment) Reset()         { *m = SignedCommitment{} }
func (m *SignedCommitment) String() string { return proto.CompactTextString(m) }
func (*SignedCommitment) ProtoMessage()    {}
func (*SignedCommitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{4}
}
func (m *SignedCommitment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedCommitment.Unmarshal(m, b)
}
func (m *SignedCommitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedCommitment.Marshal(b, m, deterministic)
}
func (m *SignedCommitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedCommitment.Merge(m, src)
}
func (m *SignedCommitment) XXX_Size() int {
	return xxx_messageInfo_SignedCommitment.Size(m)
}
func (m *SignedCommitment) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedCommitment.DiscardUnknown(m)
}

var xxx_messageInfo_SignedCommitment proto.InternalMessageInfo

// data needed to update the client
type MmrUpdateProof struct {
	// the new mmr leaf SCALE encoded.
	MmrLeaf *BeefyMmrLeaf `protobuf:"bytes,1,opt,name=mmr_leaf,json=mmrLeaf,proto3" json:"mmr_leaf,omitempty"`
	// leaf index for the mmr_leaf
	MmrLeafIndex uint64 `protobuf:"varint,2,opt,name=mmr_leaf_index,json=mmrLeafIndex,proto3" json:"mmr_leaf_index,omitempty"`
	// proof that this mmr_leaf index is valid.
	MmrProof [][]byte `protobuf:"bytes,3,rep,name=mmr_proof,json=mmrProof,proto3" json:"mmr_proof,omitempty"`
	// signed commitment data
	SignedCommitment *SignedCommitment `protobuf:"bytes,4,opt,name=signed_commitment,json=signedCommitment,proto3" json:"signed_commitment,omitempty"`
	// generated using full authority list from runtime
	AuthoritiesProof [][]byte `protobuf:"bytes,5,rep,name=authorities_proof,json=authoritiesProof,proto3" json:"authorities_proof,omitempty"`
}

func (m *MmrUpdateProof) Reset()         { *m = MmrUpdateProof{} }
func (m *MmrUpdateProof) String() string { return proto.CompactTextString(m) }
func (*MmrUpdateProof) ProtoMessage()    {}
func (*MmrUpdateProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{5}
}
func (m *MmrUpdateProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MmrUpdateProof.Unmarshal(m, b)
}
func (m *MmrUpdateProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MmrUpdateProof.Marshal(b, m, deterministic)
}
func (m *MmrUpdateProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MmrUpdateProof.Merge(m, src)
}
func (m *MmrUpdateProof) XXX_Size() int {
	return xxx_messageInfo_MmrUpdateProof.Size(m)
}
func (m *MmrUpdateProof) XXX_DiscardUnknown() {
	xxx_messageInfo_MmrUpdateProof.DiscardUnknown(m)
}

var xxx_messageInfo_MmrUpdateProof proto.InternalMessageInfo

// ConsensusState defines the consensus state from Tendermint.
type ConsensusState struct {
	// timestamp that corresponds to the block height in which the ConsensusState
	// was stored.
	Timestamp time.Time `protobuf:"bytes,1,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	// packet commitment root
	Root []byte `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (m *ConsensusState) Reset()         { *m = ConsensusState{} }
func (m *ConsensusState) String() string { return proto.CompactTextString(m) }
func (*ConsensusState) ProtoMessage()    {}
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{6}
}
func (m *ConsensusState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusState.Unmarshal(m, b)
}
func (m *ConsensusState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusState.Marshal(b, m, deterministic)
}
func (m *ConsensusState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusState.Merge(m, src)
}
func (m *ConsensusState) XXX_Size() int {
	return xxx_messageInfo_ConsensusState.Size(m)
}
func (m *ConsensusState) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusState.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusState proto.InternalMessageInfo

// Misbehaviour is a wrapper over two conflicting Headers
// that implements Misbehaviour interface expected by ICS-02
type Misbehaviour struct {
	Header1 *Header `protobuf:"bytes,2,opt,name=header_1,json=header1,proto3" json:"header_1,omitempty" yaml:"header_1"`
	Header2 *Header `protobuf:"bytes,3,opt,name=header_2,json=header2,proto3" json:"header_2,omitempty" yaml:"header_2"`
}

func (m *Misbehaviour) Reset()         { *m = Misbehaviour{} }
func (m *Misbehaviour) String() string { return proto.CompactTextString(m) }
func (*Misbehaviour) ProtoMessage()    {}
func (*Misbehaviour) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{7}
}
func (m *Misbehaviour) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Misbehaviour.Unmarshal(m, b)
}
func (m *Misbehaviour) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Misbehaviour.Marshal(b, m, deterministic)
}
func (m *Misbehaviour) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Misbehaviour.Merge(m, src)
}
func (m *Misbehaviour) XXX_Size() int {
	return xxx_messageInfo_Misbehaviour.Size(m)
}
func (m *Misbehaviour) XXX_DiscardUnknown() {
	xxx_messageInfo_Misbehaviour.DiscardUnknown(m)
}

var xxx_messageInfo_Misbehaviour proto.InternalMessageInfo

// Header contains the neccessary data to proove finality about IBC commitments
type Header struct {
	// parachain headers needed for proofs and ConsensusState
	ParachainHeaders []*ParachainHeader `protobuf:"bytes,1,rep,name=parachain_headers,json=parachainHeaders,proto3" json:"parachain_headers,omitempty"`
	// mmr proofs for the headers gotten from rpc "mmr_generateProofs"
	MmrProofs [][]byte `protobuf:"bytes,2,rep,name=mmr_proofs,json=mmrProofs,proto3" json:"mmr_proofs,omitempty"`
	// size of the mmr for the given proof
	MmrSize uint64 `protobuf:"varint,3,opt,name=mmr_size,json=mmrSize,proto3" json:"mmr_size,omitempty"`
	// optional payload to update the mmr root hash.
	MmrUpdateProof *MmrUpdateProof `protobuf:"bytes,4,opt,name=mmr_update_proof,json=mmrUpdateProof,proto3" json:"mmr_update_proof,omitempty"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{8}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

// data needed to prove parachain header inclusion in mmr.
type ParachainHeader struct {
	// scale-encoded parachain header bytes
	ParachainHeader []byte `protobuf:"bytes,1,opt,name=parachain_header,json=parachainHeader,proto3" json:"parachain_header,omitempty"`
	// reconstructed MmrLeaf, see beefy-go spec
	MmrLeafPartial *BeefyMmrLeafPartial `protobuf:"bytes,2,opt,name=mmr_leaf_partial,json=mmrLeafPartial,proto3" json:"mmr_leaf_partial,omitempty"`
	// para_id of the header.
	ParaId uint32 `protobuf:"varint,3,opt,name=para_id,json=paraId,proto3" json:"para_id,omitempty"`
	// proofs for our header in the parachain heads root
	ParachainHeadsProof [][]byte `protobuf:"bytes,4,rep,name=parachain_heads_proof,json=parachainHeadsProof,proto3" json:"parachain_heads_proof,omitempty"`
	// leaf index for parachain heads proof
	HeadsLeafIndex uint64 `protobuf:"varint,5,opt,name=heads_leaf_index,json=headsLeafIndex,proto3" json:"heads_leaf_index,omitempty"`
	// total number of para heads in parachain_heads_root
	HeadsTotalCount uint64 `protobuf:"varint,6,opt,name=heads_total_count,json=headsTotalCount,proto3" json:"heads_total_count,omitempty"`
	// trie merkle proof of inclusion in header.extrinsic_root
	ExtrinsicProof [][]byte `protobuf:"bytes,7,rep,name=extrinsic_proof,json=extrinsicProof,proto3" json:"extrinsic_proof,omitempty"`
	// the actual timestamp extrinsic
	TimestampExtrinsic []byte `protobuf:"bytes,8,opt,name=timestamp_extrinsic,json=timestampExtrinsic,proto3" json:"timestamp_extrinsic,omitempty"`
}

func (m *ParachainHeader) Reset()         { *m = ParachainHeader{} }
func (m *ParachainHeader) String() string { return proto.CompactTextString(m) }
func (*ParachainHeader) ProtoMessage()    {}
func (*ParachainHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{9}
}
func (m *ParachainHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParachainHeader.Unmarshal(m, b)
}
func (m *ParachainHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParachainHeader.Marshal(b, m, deterministic)
}
func (m *ParachainHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParachainHeader.Merge(m, src)
}
func (m *ParachainHeader) XXX_Size() int {
	return xxx_messageInfo_ParachainHeader.Size(m)
}
func (m *ParachainHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ParachainHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ParachainHeader proto.InternalMessageInfo

// Partial data for MmrLeaf
type BeefyMmrLeafPartial struct {
	// leaf version
	Version U8 `protobuf:"varint,1,opt,name=version,proto3,customtype=U8" json:"version"`
	// parent block for this leaf
	ParentNumber uint32 `protobuf:"varint,2,opt,name=parent_number,json=parentNumber,proto3" json:"parent_number,omitempty"`
	// parent hash for this leaf
	ParentHash *SizedByte32 `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3,customtype=SizedByte32" json:"parent_hash,omitempty"`
	// next authority set.
	BeefyNextAuthoritySet BeefyAuthoritySet `protobuf:"bytes,4,opt,name=beefy_next_authority_set,json=beefyNextAuthoritySet,proto3" json:"beefy_next_authority_set"`
}

func (m *BeefyMmrLeafPartial) Reset()         { *m = BeefyMmrLeafPartial{} }
func (m *BeefyMmrLeafPartial) String() string { return proto.CompactTextString(m) }
func (*BeefyMmrLeafPartial) ProtoMessage()    {}
func (*BeefyMmrLeafPartial) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{10}
}
func (m *BeefyMmrLeafPartial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeefyMmrLeafPartial.Unmarshal(m, b)
}
func (m *BeefyMmrLeafPartial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeefyMmrLeafPartial.Marshal(b, m, deterministic)
}
func (m *BeefyMmrLeafPartial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeefyMmrLeafPartial.Merge(m, src)
}
func (m *BeefyMmrLeafPartial) XXX_Size() int {
	return xxx_messageInfo_BeefyMmrLeafPartial.Size(m)
}
func (m *BeefyMmrLeafPartial) XXX_DiscardUnknown() {
	xxx_messageInfo_BeefyMmrLeafPartial.DiscardUnknown(m)
}

var xxx_messageInfo_BeefyMmrLeafPartial proto.InternalMessageInfo

// Beefy Authority Info
type BeefyAuthoritySet struct {
	// Id of the authority set, it should be strictly increasing
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// size of the authority set
	Len uint64 `protobuf:"varint,2,opt,name=len,proto3" json:"len,omitempty"`
	// merkle root of the sorted authority public keys.
	AuthorityRoot *SizedByte32 `protobuf:"bytes,3,opt,name=authority_root,json=authorityRoot,proto3,customtype=SizedByte32" json:"authority_root,omitempty"`
}

func (m *BeefyAuthoritySet) Reset()         { *m = BeefyAuthoritySet{} }
func (m *BeefyAuthoritySet) String() string { return proto.CompactTextString(m) }
func (*BeefyAuthoritySet) ProtoMessage()    {}
func (*BeefyAuthoritySet) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{11}
}
func (m *BeefyAuthoritySet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeefyAuthoritySet.Unmarshal(m, b)
}
func (m *BeefyAuthoritySet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeefyAuthoritySet.Marshal(b, m, deterministic)
}
func (m *BeefyAuthoritySet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeefyAuthoritySet.Merge(m, src)
}
func (m *BeefyAuthoritySet) XXX_Size() int {
	return xxx_messageInfo_BeefyAuthoritySet.Size(m)
}
func (m *BeefyAuthoritySet) XXX_DiscardUnknown() {
	xxx_messageInfo_BeefyAuthoritySet.DiscardUnknown(m)
}

var xxx_messageInfo_BeefyAuthoritySet proto.InternalMessageInfo

// BeefyMmrLeaf leaf data
type BeefyMmrLeaf struct {
	// leaf version
	Version U8 `protobuf:"varint,1,opt,name=version,proto3,customtype=U8" json:"version"`
	// parent block for this leaf
	ParentNumber uint32 `protobuf:"varint,2,opt,name=parent_number,json=parentNumber,proto3" json:"parent_number,omitempty"`
	// parent hash for this leaf
	ParentHash *SizedByte32 `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3,customtype=SizedByte32" json:"parent_hash,omitempty"`
	// beefy next authority set.
	BeefyNextAuthoritySet BeefyAuthoritySet `protobuf:"bytes,4,opt,name=beefy_next_authority_set,json=beefyNextAuthoritySet,proto3" json:"beefy_next_authority_set"`
	// merkle root hash of parachain heads included in the leaf.
	ParachainHeads *SizedByte32 `protobuf:"bytes,5,opt,name=parachain_heads,json=parachainHeads,proto3,customtype=SizedByte32" json:"parachain_heads,omitempty"`
}

func (m *BeefyMmrLeaf) Reset()         { *m = BeefyMmrLeaf{} }
func (m *BeefyMmrLeaf) String() string { return proto.CompactTextString(m) }
func (*BeefyMmrLeaf) ProtoMessage()    {}
func (*BeefyMmrLeaf) Descriptor() ([]byte, []int) {
	return fileDescriptor_43205c4bfbe9a422, []int{12}
}
func (m *BeefyMmrLeaf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeefyMmrLeaf.Unmarshal(m, b)
}
func (m *BeefyMmrLeaf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeefyMmrLeaf.Marshal(b, m, deterministic)
}
func (m *BeefyMmrLeaf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeefyMmrLeaf.Merge(m, src)
}
func (m *BeefyMmrLeaf) XXX_Size() int {
	return xxx_messageInfo_BeefyMmrLeaf.Size(m)
}
func (m *BeefyMmrLeaf) XXX_DiscardUnknown() {
	xxx_messageInfo_BeefyMmrLeaf.DiscardUnknown(m)
}

var xxx_messageInfo_BeefyMmrLeaf proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ClientState)(nil), "ibc.lightclients.beefy.v1.ClientState")
	golang_proto.RegisterType((*ClientState)(nil), "ibc.lightclients.beefy.v1.ClientState")
	proto.RegisterType((*PayloadItem)(nil), "ibc.lightclients.beefy.v1.PayloadItem")
	golang_proto.RegisterType((*PayloadItem)(nil), "ibc.lightclients.beefy.v1.PayloadItem")
	proto.RegisterType((*Commitment)(nil), "ibc.lightclients.beefy.v1.Commitment")
	golang_proto.RegisterType((*Commitment)(nil), "ibc.lightclients.beefy.v1.Commitment")
	proto.RegisterType((*CommitmentSignature)(nil), "ibc.lightclients.beefy.v1.CommitmentSignature")
	golang_proto.RegisterType((*CommitmentSignature)(nil), "ibc.lightclients.beefy.v1.CommitmentSignature")
	proto.RegisterType((*SignedCommitment)(nil), "ibc.lightclients.beefy.v1.SignedCommitment")
	golang_proto.RegisterType((*SignedCommitment)(nil), "ibc.lightclients.beefy.v1.SignedCommitment")
	proto.RegisterType((*MmrUpdateProof)(nil), "ibc.lightclients.beefy.v1.MmrUpdateProof")
	golang_proto.RegisterType((*MmrUpdateProof)(nil), "ibc.lightclients.beefy.v1.MmrUpdateProof")
	proto.RegisterType((*ConsensusState)(nil), "ibc.lightclients.beefy.v1.ConsensusState")
	golang_proto.RegisterType((*ConsensusState)(nil), "ibc.lightclients.beefy.v1.ConsensusState")
	proto.RegisterType((*Misbehaviour)(nil), "ibc.lightclients.beefy.v1.Misbehaviour")
	golang_proto.RegisterType((*Misbehaviour)(nil), "ibc.lightclients.beefy.v1.Misbehaviour")
	proto.RegisterType((*Header)(nil), "ibc.lightclients.beefy.v1.Header")
	golang_proto.RegisterType((*Header)(nil), "ibc.lightclients.beefy.v1.Header")
	proto.RegisterType((*ParachainHeader)(nil), "ibc.lightclients.beefy.v1.ParachainHeader")
	golang_proto.RegisterType((*ParachainHeader)(nil), "ibc.lightclients.beefy.v1.ParachainHeader")
	proto.RegisterType((*BeefyMmrLeafPartial)(nil), "ibc.lightclients.beefy.v1.BeefyMmrLeafPartial")
	golang_proto.RegisterType((*BeefyMmrLeafPartial)(nil), "ibc.lightclients.beefy.v1.BeefyMmrLeafPartial")
	proto.RegisterType((*BeefyAuthoritySet)(nil), "ibc.lightclients.beefy.v1.BeefyAuthoritySet")
	golang_proto.RegisterType((*BeefyAuthoritySet)(nil), "ibc.lightclients.beefy.v1.BeefyAuthoritySet")
	proto.RegisterType((*BeefyMmrLeaf)(nil), "ibc.lightclients.beefy.v1.BeefyMmrLeaf")
	golang_proto.RegisterType((*BeefyMmrLeaf)(nil), "ibc.lightclients.beefy.v1.BeefyMmrLeaf")
}

func init() {
	proto.RegisterFile("ibc/lightclients/beefy/v1/beefy.proto", fileDescriptor_43205c4bfbe9a422)
}
func init() {
	golang_proto.RegisterFile("ibc/lightclients/beefy/v1/beefy.proto", fileDescriptor_43205c4bfbe9a422)
}

var fileDescriptor_43205c4bfbe9a422 = []byte{
	// 1267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x57, 0x3f, 0x8c, 0x13, 0xc7,
	0x17, 0xf6, 0xda, 0xe6, 0xfe, 0x3c, 0xfb, 0x6c, 0xdf, 0x1c, 0xfc, 0x7e, 0x86, 0x24, 0xf6, 0x71,
	0x81, 0x60, 0x20, 0x67, 0xc7, 0x26, 0x8a, 0x10, 0x15, 0xf8, 0x82, 0xc4, 0x45, 0xe1, 0x84, 0xe6,
	0x40, 0x21, 0x28, 0xd2, 0x6a, 0xec, 0x9d, 0xb3, 0x47, 0xec, 0xee, 0x58, 0x3b, 0x63, 0x8b, 0xa3,
	0x8f, 0x94, 0x92, 0x36, 0x55, 0x28, 0xd2, 0xa7, 0x4d, 0x99, 0x92, 0x92, 0x32, 0xa2, 0x70, 0xa2,
	0xbb, 0x2e, 0x65, 0xea, 0x14, 0xd1, 0xfc, 0xd9, 0xf5, 0xde, 0x71, 0x38, 0x90, 0x36, 0xdd, 0xec,
	0xf7, 0xde, 0xbc, 0xf9, 0xe6, 0x9b, 0xf7, 0xde, 0xcc, 0xc2, 0x45, 0xd6, 0xeb, 0xb7, 0x7c, 0x36,
	0x18, 0xca, 0xbe, 0xcf, 0x68, 0x28, 0x45, 0xab, 0x47, 0xe9, 0xde, 0x7e, 0x6b, 0xd2, 0x36, 0x83,
	0xe6, 0x28, 0xe2, 0x92, 0xa3, 0xb3, 0xac, 0xd7, 0x6f, 0xa6, 0xdd, 0x9a, 0xc6, 0x3a, 0x69, 0x9f,
	0xab, 0x0f, 0x38, 0x1f, 0xf8, 0xb4, 0xa5, 0x1d, 0x7b, 0xe3, 0xbd, 0x96, 0x64, 0x01, 0x15, 0x92,
	0x04, 0x23, 0x33, 0xf7, 0xdc, 0xe9, 0x01, 0x1f, 0x70, 0x3d, 0x6c, 0xa9, 0x91, 0x41, 0x37, 0xfe,
	0xc8, 0x42, 0x61, 0x4b, 0xc7, 0xda, 0x95, 0x44, 0x52, 0xb4, 0x01, 0x2b, 0x41, 0x10, 0xb9, 0x11,
	0xe7, 0xd2, 0x1d, 0x12, 0x31, 0xac, 0x3a, 0xeb, 0x4e, 0xa3, 0x88, 0x0b, 0x41, 0x10, 0x61, 0xce,
	0xe5, 0x1d, 0x22, 0x86, 0xa8, 0x09, 0x6b, 0x3e, 0x91, 0x54, 0x48, 0x57, 0xaf, 0xee, 0x0e, 0xa9,
	0x62, 0x54, 0xcd, 0xae, 0x3b, 0x8d, 0x15, 0xbc, 0x6a, 0x4c, 0x5d, 0x65, 0xb9, 0xa3, 0x0d, 0xe8,
	0x43, 0x58, 0xd9, 0x8b, 0xf8, 0x53, 0x1a, 0xc6, 0x9e, 0xb9, 0x75, 0xa7, 0x91, 0xc7, 0x45, 0x03,
	0x5a, 0xa7, 0x4f, 0xe1, 0x7f, 0x26, 0x1a, 0xe9, 0x4b, 0x36, 0x21, 0x92, 0xf1, 0xd0, 0xed, 0xf9,
	0xbc, 0xff, 0xb8, 0x9a, 0xd7, 0x71, 0x4f, 0x6b, 0xeb, 0xad, 0xc4, 0xd8, 0x55, 0x36, 0xf4, 0x05,
	0x2c, 0x93, 0xb1, 0x1c, 0xf2, 0x88, 0xc9, 0xfd, 0xea, 0xa9, 0x75, 0xa7, 0x51, 0xe8, 0x7c, 0xdc,
	0x7c, 0xa3, 0x48, 0x4d, 0xcd, 0xea, 0x56, 0x3c, 0x61, 0x97, 0x4a, 0x3c, 0x9b, 0x8e, 0x1e, 0x01,
	0x0a, 0xe9, 0x13, 0xe9, 0x26, 0x88, 0x2b, 0xa8, 0xac, 0x2e, 0xfc, 0x8b, 0xa0, 0x15, 0x15, 0x27,
	0x8d, 0xdc, 0xc8, 0x7f, 0xf7, 0xbc, 0x9e, 0xd9, 0xa0, 0x50, 0xb8, 0x47, 0xf6, 0x7d, 0x4e, 0xbc,
	0x6d, 0x49, 0x03, 0xb4, 0x09, 0x30, 0x32, 0x9f, 0x2e, 0xf3, 0x8c, 0xd0, 0xdd, 0xd2, 0xab, 0x69,
	0x1d, 0x76, 0xd9, 0x53, 0xea, 0x75, 0xf7, 0x25, 0xed, 0xe0, 0x65, 0xeb, 0xb1, 0xed, 0xa1, 0xf3,
	0x50, 0x8c, 0xdd, 0x3d, 0x22, 0x89, 0xd6, 0xbb, 0x88, 0x0b, 0x16, 0xfb, 0x9c, 0x48, 0x62, 0x97,
	0xf9, 0xc1, 0x01, 0xd8, 0xe2, 0x41, 0xc0, 0x64, 0x40, 0x43, 0x89, 0x6e, 0xc2, 0xa2, 0xf5, 0xa9,
	0x3a, 0xeb, 0xb9, 0x46, 0xa1, 0xf3, 0xd1, 0x9c, 0xcd, 0xa4, 0xf8, 0xe1, 0x78, 0x1a, 0xaa, 0x43,
	0x41, 0x1f, 0x85, 0x1b, 0x8e, 0x03, 0x1a, 0xd9, 0x83, 0x06, 0x0d, 0xed, 0x28, 0x04, 0x35, 0xa0,
	0x32, 0x21, 0x3e, 0xf3, 0x88, 0xe4, 0x91, 0x52, 0x4d, 0xed, 0xc7, 0x1c, 0x72, 0x29, 0xc1, 0x77,
	0xa9, 0xdc, 0xf6, 0x2c, 0xc3, 0x1e, 0xac, 0xcd, 0x08, 0xee, 0xb2, 0x41, 0x48, 0xe4, 0x38, 0xa2,
	0xe8, 0x7d, 0x58, 0x16, 0xf1, 0x87, 0x4d, 0xbc, 0x19, 0x80, 0x2e, 0x41, 0x79, 0x76, 0x34, 0x2c,
	0xf4, 0xe8, 0x13, 0xcd, 0x24, 0x8f, 0x4b, 0x09, 0xbc, 0xad, 0x50, 0xbb, 0xc6, 0x4f, 0x0e, 0x54,
	0x54, 0x68, 0xea, 0xa5, 0xb4, 0xb8, 0x0d, 0xd0, 0x4f, 0xbe, 0xf4, 0x12, 0x85, 0xce, 0xc5, 0x39,
	0x72, 0xcc, 0xa6, 0xe2, 0xd4, 0x44, 0xb4, 0x03, 0x90, 0xf0, 0x12, 0xd5, 0xac, 0x56, 0xb5, 0xf9,
	0x56, 0x61, 0x92, 0xcd, 0xe2, 0x54, 0x04, 0xcb, 0xf8, 0xc7, 0x2c, 0x94, 0xee, 0x06, 0xd1, 0x83,
	0x91, 0x47, 0x24, 0xbd, 0x17, 0x71, 0xbe, 0x87, 0xba, 0xb0, 0xa4, 0xca, 0xd1, 0xa7, 0x64, 0xcf,
	0xb2, 0xbd, 0xf4, 0x4f, 0x99, 0x78, 0x37, 0x88, 0xbe, 0xa4, 0x64, 0x0f, 0x2f, 0x06, 0x66, 0x80,
	0x2e, 0x40, 0x29, 0x8e, 0x71, 0x44, 0xb6, 0xa2, 0x75, 0xd0, 0xa2, 0xa1, 0xf7, 0x60, 0x59, 0x79,
	0x8d, 0xd4, 0xb2, 0xd5, 0xdc, 0x7a, 0xae, 0x51, 0xc4, 0x6a, 0x69, 0x43, 0xe3, 0x21, 0xac, 0x0a,
	0x2d, 0xa5, 0x9b, 0x52, 0x2f, 0xaf, 0xf9, 0x5c, 0x9d, 0xc3, 0xe7, 0xb8, 0xfc, 0xb8, 0x22, 0x8e,
	0x1f, 0xc8, 0x55, 0x58, 0x8d, 0x4f, 0x8f, 0x51, 0x61, 0x97, 0x3f, 0xa5, 0x97, 0xaf, 0xa4, 0x0c,
	0x9a, 0x86, 0x95, 0x29, 0x84, 0xd2, 0x16, 0x0f, 0x05, 0x0d, 0xc5, 0x58, 0x98, 0xa6, 0xd5, 0x85,
	0xe5, 0xa4, 0xdb, 0x59, 0x99, 0xce, 0x35, 0x4d, 0x3f, 0x6c, 0xc6, 0xfd, 0xb0, 0x79, 0x3f, 0xf6,
	0xe8, 0x2e, 0xbd, 0x98, 0xd6, 0x33, 0xcf, 0x7e, 0xab, 0x3b, 0x78, 0x36, 0x0d, 0x21, 0xc8, 0xab,
	0xa6, 0x67, 0xab, 0x4a, 0x8f, 0xed, 0x7a, 0x2f, 0x1d, 0x28, 0xde, 0x65, 0xa2, 0x47, 0x87, 0x64,
	0xc2, 0xf8, 0x38, 0x42, 0xdf, 0xc0, 0xd2, 0x90, 0x12, 0x8f, 0x46, 0x6e, 0x5b, 0xbb, 0x17, 0x3a,
	0xe7, 0xe7, 0x88, 0x70, 0x47, 0xbb, 0x76, 0x6b, 0x07, 0xd3, 0xfa, 0xa2, 0x19, 0xb7, 0xff, 0x9c,
	0xd6, 0xcb, 0xfb, 0x24, 0xf0, 0x6f, 0x6c, 0xc4, 0x71, 0x36, 0xf0, 0xa2, 0x19, 0xb6, 0x53, 0xd1,
	0x3b, 0xba, 0x86, 0xde, 0x35, 0x7a, 0xe7, 0xb5, 0xe8, 0x9d, 0x24, 0x7a, 0xc7, 0x6e, 0xe9, 0x2f,
	0x07, 0x16, 0x8c, 0x37, 0xfa, 0x0a, 0x56, 0x47, 0x24, 0x22, 0xfd, 0x21, 0x61, 0xaa, 0x3f, 0x2b,
	0x4c, 0xd8, 0x3e, 0x71, 0x65, 0x6e, 0x9f, 0xb0, 0x73, 0x4c, 0x18, 0x5c, 0x19, 0x1d, 0x05, 0x04,
	0xfa, 0x00, 0x20, 0x49, 0x28, 0x53, 0x23, 0x45, 0xbc, 0x1c, 0x67, 0x94, 0x40, 0x67, 0x4d, 0x66,
	0x0b, 0xf6, 0x94, 0xda, 0x56, 0xa1, 0x12, 0x56, 0x75, 0x3e, 0xf4, 0x35, 0x54, 0x94, 0x69, 0xac,
	0xeb, 0xc0, 0xa6, 0x84, 0x49, 0xb6, 0xcb, 0x73, 0x18, 0x1d, 0xad, 0x9c, 0x6e, 0xfe, 0xc5, 0xb4,
	0xee, 0x60, 0x95, 0xf9, 0x29, 0xd4, 0x6e, 0xff, 0xfb, 0x1c, 0x94, 0x8f, 0x6d, 0x00, 0x5d, 0x86,
	0xca, 0x71, 0x1d, 0x6c, 0x0b, 0x2a, 0x1f, 0xdb, 0x1a, 0x7a, 0x68, 0xf8, 0xe9, 0x82, 0x1a, 0x91,
	0x48, 0x32, 0xe2, 0xdb, 0x3c, 0x68, 0xbe, 0x65, 0x71, 0xde, 0x33, 0xb3, 0x34, 0xbd, 0xd4, 0x37,
	0xfa, 0xbf, 0x6a, 0xd5, 0x11, 0x89, 0xdb, 0xe7, 0x0a, 0x5e, 0x50, 0x9f, 0xdb, 0x1e, 0xea, 0xc0,
	0x99, 0xa3, 0xec, 0x44, 0xa2, 0x8b, 0xd2, 0x75, 0xed, 0x08, 0x45, 0x53, 0x2d, 0xaa, 0x29, 0x1b,
	0xcf, 0x54, 0xe5, 0x9f, 0x32, 0x0d, 0x53, 0xe3, 0xb3, 0xda, 0xbf, 0x02, 0xab, 0xc6, 0x53, 0x72,
	0x49, 0x7c, 0xb7, 0xcf, 0xc7, 0xa1, 0xb9, 0xf8, 0xf2, 0xb8, 0xac, 0x0d, 0xf7, 0x15, 0xbe, 0xa5,
	0x60, 0xd5, 0x85, 0xe9, 0x13, 0x19, 0xb1, 0x50, 0xb0, 0xbe, 0xe5, 0xb0, 0xa8, 0x39, 0x94, 0x12,
	0xd8, 0x2c, 0xdf, 0x82, 0xb5, 0xa4, 0xba, 0xdc, 0xc4, 0x56, 0x5d, 0xd2, 0x9a, 0xa2, 0xc4, 0x74,
	0x3b, 0xb6, 0xd8, 0xb3, 0xf9, 0x36, 0x0b, 0x6b, 0x27, 0x48, 0x85, 0x2e, 0xc0, 0xe2, 0x84, 0x46,
	0x82, 0xf1, 0x50, 0x1f, 0xcb, 0x4a, 0x17, 0x54, 0x15, 0xbf, 0x9a, 0xd6, 0xb3, 0x0f, 0xae, 0xe3,
	0xd8, 0xa4, 0x9e, 0x1a, 0x23, 0x12, 0xd1, 0x50, 0xaa, 0xab, 0xaa, 0x97, 0xdc, 0x55, 0x45, 0x03,
	0xee, 0x68, 0x0c, 0x7d, 0x02, 0x05, 0xeb, 0xa4, 0x5f, 0x38, 0x39, 0x7d, 0xf1, 0x96, 0x5f, 0x4d,
	0xeb, 0x85, 0xe4, 0xe2, 0xbd, 0xd6, 0xc1, 0x60, 0x7c, 0xf4, 0x8b, 0xe7, 0x31, 0x54, 0xcd, 0xe3,
	0xe4, 0x84, 0x07, 0x42, 0xfe, 0xdd, 0x1f, 0x08, 0x3a, 0x39, 0x33, 0xf8, 0x8c, 0xf6, 0xd8, 0x39,
	0xf9, 0xad, 0x20, 0x60, 0xf5, 0xb5, 0x79, 0xa8, 0x04, 0x59, 0xfb, 0x52, 0xc8, 0xe3, 0x2c, 0xf3,
	0x50, 0x05, 0x72, 0x3e, 0x0d, 0x6d, 0x3f, 0x57, 0x43, 0xf4, 0x19, 0xcc, 0x6e, 0x43, 0xfd, 0x8a,
	0x7b, 0xd3, 0xf6, 0x56, 0x12, 0x37, 0x3c, 0x6b, 0x75, 0x3f, 0x67, 0xa1, 0x98, 0x16, 0xff, 0xbf,
	0xa3, 0x3a, 0xba, 0x0e, 0xe5, 0x63, 0x15, 0xa6, 0x8b, 0xe5, 0x04, 0x8a, 0xa5, 0xa3, 0xc5, 0x66,
	0xa4, 0xeb, 0xf6, 0x5e, 0x1c, 0xd4, 0x32, 0x2f, 0x0f, 0x6a, 0x99, 0xdf, 0x0f, 0x6a, 0x99, 0x67,
	0x87, 0xb5, 0xcc, 0xf3, 0xc3, 0x5a, 0xe6, 0x97, 0xc3, 0x9a, 0xf3, 0xf2, 0xb0, 0x96, 0xf9, 0xf5,
	0xb0, 0x96, 0x79, 0x74, 0x73, 0xc0, 0xe4, 0x70, 0xdc, 0x6b, 0xf6, 0x79, 0xd0, 0xea, 0x73, 0x11,
	0x70, 0xd1, 0x62, 0xbd, 0xfe, 0xe6, 0x80, 0xb7, 0x26, 0xd7, 0x5a, 0x01, 0xf7, 0xc6, 0x3e, 0x15,
	0xe6, 0x1f, 0x60, 0x33, 0xfe, 0x09, 0x68, 0xb7, 0x37, 0xcd, 0x7f, 0x80, 0xdc, 0x1f, 0x51, 0xd1,
	0x5b, 0xd0, 0x97, 0xd9, 0xb5, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x5d, 0x78, 0xf3, 0x2e,
	0x0c, 0x00, 0x00,
}
